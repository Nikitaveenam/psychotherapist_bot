from datetime import datetime
from sqlalchemy.ext.asyncio import AsyncSession
from models import User

async def check_user_subscription(user: User, session: AsyncSession):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if user.is_premium:
        return "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
    elif user.trial_started_at and (datetime.utcnow() - user.trial_started_at).days <= 3:
        return "üÜì –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥"
    else:
        return "üîí –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω"

async def is_user_allowed_to_chat(session: AsyncSession, user: User) -> bool:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–æ –Ω–∞ –æ–±—â–µ–Ω–∏–µ."""
    now = datetime.now()
    if user.is_premium:
        return True
    if user.trial_started_at and (now - user.trial_started_at).days < 3:
        # –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
        return True
    if not user.trial_started_at:
        # –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–±–Ω—ã–π
        user.trial_started_at = now
        await session.commit()
        return True
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ –¥–µ–Ω—å
    if not hasattr(user, "daily_requests"):
        user.daily_requests = {}
    today = now.strftime("%Y-%m-%d")
    requests_today = user.daily_requests.get(today, 0)
    return requests_today < 3
